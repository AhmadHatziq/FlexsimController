runspeed(1);
stoptime(2);

treenode triggernode = node("MODEL://Tools//OnRunStop");
string triggercode = concat("/**on run stop*/\n\nstring sFunctionName=\"OnRunStop\";\n\n#define VALUE_TIMECODE_SECONDS\t\t\t\t\t1\n#define VALUE_TIMECODE_DATETIME\t\t\t\t\t12\n\n#define VALUE_TIME_SECONDSPERMINUTE\t\t\t\t60\n#define VALUE_TIME_MINUTESPERHOUR\t\t\t\t60\n\n#define MSGTYPE_ERROR\t\t\t\t\t\t\t1\n#define MSGTYPE_WARNING\t\t\t\t\t\t\t2\n#define MSGTYPE_INFORMATION\t\t\t\t\t\t3\n#define MSGTYPE_MESSAGE\t\t\t\t\t\t\t4\n#define MSGTYPE_TEXT\t\t\t\t\t\t\t5\n\ndouble dTimeNow=time();\ndouble dStopTime=stoptime(-1);\nif (dTimeNow >= dStopTime)\n{\n\tdouble dSimulationEndedTime=realtime(VALUE_TIMECODE_SECONDS);\n\tdouble dElapsedTimeInSecs=dSimulationEndedTime - gSimulationStartedTime;\n\n\tdouble dElapsedTimeSecs=fmod(dElapsedTimeInSecs, VALUE_TIME_SECONDSPERMINUTE);\n\n\tdouble dElapsedTimeInMins=(dElapsedTimeInSecs - dElapsedTimeSecs) / VALUE_TIME_SECONDSPERMINUTE;\n\tdouble dElapsedTimeMins=fmod(dElapsedTimeInMins, VALUE_TIME_MINUTESPERHOUR);\n\n\tdouble dElapsedTimeHours=(dElapsedTimeInMins - dElapsedTimeMins) / VALUE_TIME_MINUTESPERHOUR;\n\n\tstring sElapsedTime=\"\";\n\tif (0 < dElapsedTimeHours)\n\t{\n\t\tsElapsedTime=concat(numtostring(dElapsedTimeHours), \" hrs \");\n\t}\n\n\tif (0 < dElapsedTimeMins)\n\t{\n\t\tsElapsedTime=concat(sElapsedTime, numtostring(dElapsedTimeMins), \" mins \");\n\t}\n\n\tif (0 < dElapsedTimeSecs)\n\t{\n\t\tsElapsedTime=concat(sElapsedTime, numtostring(dElapsedTimeSecs), \" secs \");\n\t}\n\n\tstring sDateTime=realtime(VALUE_TIMECODE_DATETIME);\n\tsDateTime=stringreplace(sDateTime, \"\\n\", \"\");\n\n\tstring sMsg=concat(sDateTime, \" Elapsed Time:\", sElapsedTime);\n\tMessage(MSGTYPE_INFORMATION, \"Simulation Ended \", sMsg, sFunctionName);\n\t","MAIN15WriteReports(true, \"C:\\\\\Users\\\\\lingz\\\\\Documents\\\\\y4 sem1\\\\\SDP\\\\\onelevel IBIS\\\\\", \"Output.xlsx\" , \"Output\");\n}");

setnodestr(triggernode,triggercode);
enablecode(triggernode);
buildnodeflexscript(triggernode);
MAINBuldAndRun ();
resetmodel();
go();
