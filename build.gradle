plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    // Local dependencies
    compile files("lib/pretty-tools-JDDE-2.1.0.jar")
    compile files("lib/JavaDDE.dll")
    compile files("lib/JavaDDEx64.dll")

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-io:commons-io:2.6'
    testImplementation ('org.junit.jupiter:junit-jupiter:5.5.0')
    testRuntime('org.junit.jupiter:junit-jupiter:5.5.0')
    String javaFxVersion = '11'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-media', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-media', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-media', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-web', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-web', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-web', version: javaFxVersion, classifier: 'linux'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.0'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.0'


}

processResources {
    from ('lib') {
        include 'pretty-tools-JDDE-2.1.0.jar'
        include 'JavaDDE.dll'
        include 'JavaDDEx64.dll'
    }
}

launch4j {
    outfile = 'TestMain.exe'
    mainClassName = project.mainClassName
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "C:\\Users\\lingz\\Documents\\FlexsimController\\build\\Flexsim Controller-0.1.0.jar"
    bundledJrePath= '../runtime'
    //icon = "${projectDir}/icons/myApp.ico"
}

checkstyle {
    toolVersion = '8.23'
}

shadowJar {
    archiveBaseName = "Flexsim Controller"
    archiveVersion = "0.1.0"
    archiveClassifier = null
    archiveAppendix = null
}

test {
    useJUnitPlatform()
}

group 'nusibis'

application {
    // Change this to your main class.
    mainClassName = "com.nusinfineon.Launcher"
}

run {
    enableAssertions = true
}
